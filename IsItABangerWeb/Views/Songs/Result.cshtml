@model IsItABangerWeb.Models.Song

@{
    Layout = "~/Views/Shared/_LayoutSimple.cshtml";
    ViewBag.Title = "Result";
    ViewBag.LayoutBackground = Model.IsItABanger ? "green" : "red";
    string bangerText = Model.IsItABanger ? "BANGER" : "NOT A BANGER";
}

<div class="center-block" style="text-align:center">
    <h2>@bangerText</h2>
</div>

@using (Html.BeginForm("Create", "Songs", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="form-group">
            @Html.HiddenFor(model => model.IsItABanger)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bpm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Bpm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.Bpm)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Drops, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Drops, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.Drops)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DropsAreDope, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.DropsAreDope, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.DropsAreDope)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HasAcousticInstruments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.HasAcousticInstruments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.HasAcousticInstruments)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Artist, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Artist, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Artist, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <input type="submit" value="Add to the list" class="btn btn-primary btn-lg" />
            </div>
            <div class="col-md-6">
                @Html.ActionLink("Start again", "Index", "Home", null, new {@class="btn btn-primary btn-lg"})
            </div>
        </div>
    </div>
}
